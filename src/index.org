#+TITLE: Thomas Sojka
#+DATE: <2020-06-20 Sat>

#+SETUPFILE: ~/.emacs.d/org-templates/publish-defaults.org

#+HTML_HEAD: <link rel='stylesheet' href='css/styles.css' type='text/css'/>

* Real-life use cases for CLJS macros                               :CLOJURE:
:PROPERTIES:
:TYPE: Blog
:RSS_PERMALINK: real-life-use-cases-for-cljs-macros.html
:language: en
:PUBDATE: [2021-10-07]
:ID:       35D459F5-D3A0-462A-B725-8F5F1D7376C7
:END:
When I first learned about macros, I immediately recognized how powerful they are. This realization was quickly followed by not having any idea what to build with them. But now, I start to understand when to reach for this tool.
* Electried North                                                  :noexport:
:PROPERTIES:
:TYPE: Blog
:RSS_PERMALINK: https://medium.com/@vizards.comsysto/853b2c2ffdb7?source=friends_link&sk=d1b946af1b14d8c98f549bbb1a97dd59
:language: en
:source:   medium
:PUBDATE: [2021-07-13]
:ID:       D969A724-E2ED-4D9A-9751-B31C7B3F89AF
:END:
Visualizing Norwegian Charging Stations, Live in 3D. Currently, there are 19438 Charging Stations in Norway and 2568 of them provide Live Data about their current status. These figures make it one of the best charging networks in the world
* 100 Days of Spaced Repetition
:PROPERTIES:
:TYPE: Blog
:RSS_PERMALINK: 100-days-of-spaced-repetition.html
:language: en
:PUBDATE: [2021-02-22]
:ID:       F42708B6-BDBD-4957-82C4-B76A2F64F027
:END:
100 days ago I was introduced to Spaced Repetition, a learning method scientifically proven to work. The basic idea is to learn facts and repeat them at increasing intervals. After several iterations, you remember the fact forever.
* How to grow a tree with clojure.zip :CLOJURE:
:PROPERTIES:
:TYPE: Blog
:RSS_PERMALINK: how-to-grow-a-tree.html
:language: en
:PUBDATE: [2021-02-01]
:ID:       46F2C253-8027-4F02-AD5F-9ACE38087CF8
:END:
Need to build a Clojure tree data structure from an org file by using the clojure.zip API? This post explains how.
* Setup tests with Cider & deps.edn in 5 steps :CLOJURE:
:PROPERTIES:
:TYPE: Blog
:RSS_PERMALINK: setup-tests-with-cider-and-depsedn-in-5-steps.html
:language: en
:PUBDATE: [2021-01-10]
:ID:       E9167E76-1835-44C6-8D29-023D65A44327
:END:
The configuration for tests with Cider & deps.edn is simple but not easy. This guides helps get it done quickly.
* The Discovery of Fire in ClojureScript                           :noexport:
:PROPERTIES:
:TYPE: Talk
:language: en
:RSS_PERMALINK: https://youtu.be/Zj-L2bGAGS8?t=1256
:source:   youtube
:PUBDATE:  [2019-06-13]
:ID:       C555D2A7-751C-42D8-994A-D1A2B50ECAC5
:END:
Friction, tinder & wood are classic ingredients for the creation of fire but this talk will show you how to create a fire with ClojureScript, forces & blending. Relearn your long lost physics knowledge with fun and take a look into the world of creative visualâ€‹ programming.
* Compose All the Things :noexport:
:PROPERTIES:
:TYPE: Talk
:RSS_PERMALINK: https://www.youtube.com/watch?v=juMLwOTxnvw
:language: en
:source:   youtube
:ID:       C3F4EB81-0768-48F4-ABAB-E18A53501746
:PUBDATE:  [2018-10-29]
:END:
Functional composition can help to build flexible and readable APIs. It is a concept that can be translated into a variety of programming languages and domains and is therefore not limited to JavaScript. This talk helps to understand the advantages of functional composition and to explain its underlying ideas. Furthermore, it bridges practical programming concepts such as testing or dependency injection with functional programming concepts such as pure functions or partial application.
* Webscraping with algebraic structures in JS :noexport:
:PROPERTIES:
:TYPE: Talk
:RSS_PERMALINK: https://www.youtube.com/watch?v=ae_3svi5Eg0
:language: en
:source:   youtube
:ID:       BE4C309A-AA09-4FBD-93F9-07ADA0332B2E
:PUBDATE:  [2017-10-26]
:END:
You will learn about

- functors,
- monads,
- traversables,
- and applicatives,
without any math formular. Instead you will see some live coding with the best editor in the world (it's ðŸŽ‰ Emacs ðŸŽ‰)
* 6 Tips to finish your Side Project
:PROPERTIES:
:TYPE: Blog
:RSS_PERMALINK: 6-tips-to-finish-your-side-project.html
:language: en
:ID:       D61CD178-EF36-41A0-B6A7-8E7ACAE4B5E2
:PUBDATE:  [2020-07-20]
:END:
After analyzing all my failed and successful side projects, I found 6 key aspects that all my successful side projects have in common.
* Steal Like a Data Visualiser :noexport:
:PROPERTIES:
:TYPE: Blog
:RSS_PERMALINK: https://medium.com/nightingale/steal-like-a-data-visualiser-2ec7fb470896?source=friends_link&sk=8ab6fa936d6e61dbdec2c2a7f607d1a0
:language: en
:source:   medium
:ID:       1DA95C94-AC22-4641-9E22-71A5F39C0450
:PUBDATE: [2020-07-03]
:END:
How I recreated a particle orbit in Clojure and improved my animation skills in the process.
* Visualizing Supply Chains with the Vizards :noexport:
:PROPERTIES:
:TYPE: Blog
:RSS_PERMALINK: https://medium.com/comsystoreply/visualizing-supply-chains-with-the-vizards-d46153e46613
:language: en
:source:   medium
:ID:       579D9890-4E3C-4797-B643-88F121E0D37C
:PUBDATE:  [2020-05-12]
:END:
A hands-on approach on how to improve the quality of data visualizations step by step, even when you are not an expert in the field.
* Bullet journaling my 2019 :noexport:
:PROPERTIES:
:TYPE: Blog
:RSS_PERMALINK: https://medium.com/@rollacaster/bullet-journaling-my-2019-9ef1e67b95a5
:language: en
:source:   medium
:ID:       43F39C6C-3076-49C1-AFEB-143F0D47D68A
:PUBDATE:  [2020-01-24]
:END:
In 2019 I took notes of everything I did and analyzed my complete year. In retrospect 2019 was a great year and I know exactly how to make 2020 even better.
* Unsere TÃ¼ren sind jetzt dauerhaft geÃ¶ffnet :noexport:
:PROPERTIES:
:TYPE: Blog
:RSS_PERMALINK: https://comsystoreply.de/blog-post/unsere-turen-sind-jetzt-dauerhaft-geoffnet
   :language: de
:source:   comsysto
:ID:       728E38E8-D0D9-423C-B2F7-A2AA8490D500
:PUBDATE:  [2019-01-07]
:END:
Wir sind stolz darauf unseren Virtual Reality Office Rundgang zu teilen, erstellt mit aframe und react. Besuch uns jederzeit, wirf einen Blick hinter die Kulissen und lerne wie du deine eigene virtuelle Tour erstellen kannst.
* Learning Clojure :CLOJURE:
:PROPERTIES:
:TYPE: Blog
:RSS_PERMALINK: learning-clojure.html
:language: en
:ID:       5B428D55-D061-475D-8660-6674F3906D90
:PUBDATE:  [2018-08-13]
:END:
I decided to learn Clojure this year. This is my journey so far.
* Creating elisp packages :EMACS:
:PROPERTIES:
:TYPE: Blog
:RSS_PERMALINK: creating-elisp-packages.html
:language: en
:ID:       604F6D42-21AB-442B-B9B6-A49F38862CF4
:PUBDATE:  [2018-02-11]
:END:
How to publish your first package on Melpa.
* Introducing elcontext :EMACS:
:PROPERTIES:
:TYPE: Blog
:RSS_PERMALINK: elcontext.html
:language: en
:ID:       94228DA8-45E4-4F84-82A3-5BBD40F691A4
:PUBDATE:  [2018-02-04]
:END:
How I build context based actions for Emacs.
* Putting in overtime with Elm :noexport:
:PROPERTIES:
:TYPE: Blog
:RSS_PERMALINK: https://comsystoreply.de/blog-post/putting-in-overtime-with-elm
:language: en
:source:   comsysto
:ID:       BFD7DEA2-E7CF-4D01-8EFC-A83E6FA86D3E
:PUBDATE:  [2017-04-11]
:END:
We improved our time-tracking system with the functional programming language Elm by visualizing our current overtime.
* Cross Stack JavaScript with React :noexport:
:PROPERTIES:
:TYPE: Blog
:RSS_PERMALINK: https://comsystoreply.de/blog-post/cross-stack-javascript-with-react
:language: en
:source:   comsysto
:ID:       B84DF3EB-9669-40D0-B8A4-88373377FAC1
:PUBDATE:  [2016-06-29]
:END:
JavaScript crossed the border of the web browser and spread into other platforms. Along the way numerous libraries compete to form an ecosystem for targeting these platforms. This blog post guides through the steps to create a cross stack platform with React.js and further accompanying libraries.
* Morphing Visualizations in React & D3.js :noexport:
:PROPERTIES:
:TYPE: Course
:RSS_PERMALINK: https://www.youtube.com/playlist?list=PLB3sLatZtqYms9T85gf_PTyneg1SLvsEa
:language: en
:source:   youtube
:ID:       45479FCB-2F37-429B-B151-D49E14C41345
:PUBDATE:  [2020-05-01]
:END:
Learn how to create a visualization which is able to morph between a pack visualization and a tree using React and D3.js
* Sketches :noexport:
:PROPERTIES:
:TYPE: Project
:RSS_PERMALINK: https://rollacaster.github.io/sketches
:language: en
:ID:       693F658A-6DB4-4F26-8A5B-05D722851D1D
:PUBDATE:  [2019-03-03]
:END:
Exploring creative visual programming
* elcontext: Context-based actions for Emacs :noexport:
:PROPERTIES:
:TYPE: Project
:RSS_PERMALINK: https://github.com/rollacaster/elcontext
:language: en
:source:   github
:ID:       8A8F1DF8-791D-412D-A73B-6EDA057E190A
:PUBDATE:  [2018-02-04]
:END:
Bring your editing experience to the next level with context-based actions for emacs
* ðŸ”¥ Fire Hands ðŸ”¥ :noexport:
:PROPERTIES:
:TYPE: Project
:RSS_PERMALINK: https://fire-hands.now.sh/
:language: en
:ID:       CFC1C754-F1FC-407B-98C6-44B62322BF0F
:PUBDATE:  [2019-07-01]
:END:
There's fire coming out of your hands!
* react-animated-donut :noexport:
:PROPERTIES:
:TYPE: Project
:RSS_PERMALINK: https://www.npmjs.com/package/react-animated-donut
:language: en
:source:   npm
:ID:       2D098D90-35FB-4E5B-ABFD-A131F4FF7B9D
:PUBDATE:  [2017-06-18]
:END:
Animated Donut Chart using react & d3
